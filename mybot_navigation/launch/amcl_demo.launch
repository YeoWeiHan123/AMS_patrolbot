<?xml version="1.0"?>
<launch>
  <master auto="true"/>
  <!--arg name="publish_covariance" default="true"/-->

  <!-- Map server -->

  <!-- Map server -->
  <!--arg name="map_file" default="$(find mybot_navigation)/maps/ttsh_final.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" /-->

  <arg name="map_file" default="$(find mybot_navigation)/maps/map.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Place map frame at odometry frame -->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser_broadcaster" args="0 0 0 0 0 0 base_link laser 100"/>
  <!--node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 map odom 100"/-->

  <!-- Publishes the voxel grid to rviz for display -->
  <!--node pkg="costmap_2d" type="costmap_2d_markers" name="voxel_visualizer">
    <remap from="voxel_grid" to="costmap/voxel_grid"/>
  </node-->

  <!-- Publishes the voxel grid to rviz for display?> 
  <node name="voxel_grid_2_point_cloud" pkg="costmap_2d" type="costmap_2d_cloud">
    <remap from="voxel_grid" to="/move_base/local_costmap/obstacle_layer/voxel_grid"/>
    <remap from="voxel_marked_cloud" to="/move_base/local_costmap/obstacle_layer/marked_cloud"/>
    <remap from="voxel_unknown_cloud" to="/move_base/local_costmap/obstacle_layer/unknown_cloud"/>
  </node-->

  <!-- Localization -->
  <node pkg="amcl" type="amcl" name="amcl" >
    <param name="publish_tf" type="bool" value="false"/>
    <remap from="initialpose" to="robot_pose_ekf/odom_combined" />robot_pose_ekf/odom_combined
    <remap from="scan" to="/scan_bottom"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="global_frame_id" value="map"/>level_mux_map
    <param name="base_frame_id" value="base_link"/>
    <param name="odom_model_type" value="diff-corrected"/>
    <param name="use_map_topic" value="true"/> ***
    <!-- Publish scans from best pose at a max of 10 Hz -->
    <param name="odom_alpha5" value="0.1"/>
    <param name="transform_tolerance" value="0.2" />
    <param name="gui_publish_rate" value="5.0"/>    ###10
    <param name="laser_max_beams" value="30"/>
    <param name="min_particles" value="500"/>
    <param name="max_particles" value="5000"/>
    <param name="kld_err" value="0.05"/>
    <param name="kld_z" value="0.99"/>
    <param name="odom_alpha1" value="0.2"/>
    <param name="odom_alpha2" value="0.2"/>
    <!-- translation std dev, m -->
    <param name="odom_alpha3" value="0.8"/>
    <param name="odom_alpha4" value="0.2"/>
    <param name="laser_z_hit" value="0.5"/>
    <param name="laser_z_short" value="0.05"/>
    <param name="laser_z_max" value="0.05"/>
    <param name="laser_z_rand" value="0.5"/>
    <param name="laser_sigma_hit" value="0.2"/>
    <param name="laser_lambda_short" value="0.1"/>
    <param name="laser_lambda_short" value="0.1"/>
    <!--param name="laser_model_type" value="likelihood_field"/-->
    <param name="laser_model_type" value="beam"/> >
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="update_min_d" value="0.2"/>
    <param name="update_min_a" value="0.5"/>
    <param name="resample_interval" value="1"/>
    <param name="transform_tolerance" value="0.01"/>
    <param name="recovery_alpha_slow" value="0.0"/>
    <param name="recovery_alpha_fast" value="0.0"/>
  </node>
  <!--include file="$(find amcl)/examples/amcl_omni.launch"/-->

##START_MOVE_BASIC###
  <!--node name="move_basic" pkg="move_basic" type="move_basic" output="screen">
    <remap from="scan" to="/scan_top"/>
  </node-->
    <!--node name="depthimage_to_laserscan" pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" output="screen">
        <remap from="image" to="/camera/depth/image_raw"/>
        <remap from="camera_info" to="/camera/depth/camera_info"/>
        <param name="output_frame_id" value="laser" />
        <remap from="scan" to="depth_scan"/>
        <param name="scan_height" value="3"/>
    </node-->

  <!-- Move base -->
  <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">
    <rosparam file="$(find mybot_navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find mybot_navigation)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find mybot_navigation)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find mybot_navigation)/config/global_costmap_params.yaml" command="load" />
    <!--rosparam file="$(find mybot_navigation)/config/trajectory_planner_params.yaml" command="load" /-->
    <rosparam file="$(find mybot_navigation)/config/dwa_local_planner_params.yaml" command="load" />
    <!--rosparam file="$(find mybot_navigation)/config/ftc_local_planner_params.yaml" command="load" /-->
    <!--rosparam file="$(find mybot_navigation)/config/teb_local_planner_params.yaml" command="load" /-->	
    <rosparam file="$(find mybot_navigation)/config/navfn_global_planner_params.yaml" command="load" />
    <rosparam file="$(find mybot_navigation)/config/move_base_params.yaml" command="load" />

    <!--param name="base_local_planner" value="ftc_local_planner/FTCPlanner" /-->
    <!--param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS" /-->
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <!--param name="base_local_planner" value="teb_local/TebLocalPlannerROS" /-->
    <remap from="/cmd_vel" to="/RosAria/cmd_vel"/>
    <remap from="/odom" to="odometry/filtered" />RosAria/pose
    <param name="use_sim_time" value="true" />
    <param name="controller_frequency" value = "5.0"/>
    <param name="clearing_rotation_allowed" value = "true"/>
    <param name="recovery_behavior_enabled" value = "true"/>
    <param name="yaw_goal_tolerance" value = "1.0"/>
    <param name="xy_goal_tolerance" value = "0.60"/>

    <!--remap from="people" to="people_tracked"/-->
  </node>

  <!--node pkg="laser_ortho_projector" type="laser_ortho_projector_node" name="laser_ortho_projector" 
    output="screen">
    <param name="use_imu" type="bool" value="true"/>
    <param name="publish_tf" type="bool" value="false"/>
    <remap from="scan" to="scan_top"/>
  </node-->

  <!--#### start the laser scan_matcher ##############################-->
 <!-- params from http://wiki.ros.org/laser_scan_matcher?distro=fuerte -->
  <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" 
    name="laser_scan_matcher_node" >

    <!-- Topics -->
    <remap from="scan" to="scan"/>
    <remap from="cloud" to="cloud_ortho"/>/camera/depth/points
    <!--remap from="imu/data" to="imu/data_compass"/-->
    <remap from="odom" to="RosAria/pose"/>odometry/filtered
    <remap from="vel" to="/RosAria/cmd_vel" />

    <!-- Coordinate frames -->
    <param name="fixed_frame" value="odom" />
    <param name="base_frame" value="base_link" />

    <!-- Motion prediction -->
    <param name="use_imu" value="true"/>
    <param name="use_odom" value="false"/>
    <param name="use_vel" value="false"/>

    <!-- Point cloud input -->
    <param name="use_cloud_input" value="false"/>changeed
    <param name="cloud_range_min" value="0.4"/>
    <param name="cloud_range_max" value="5.0"/>

    <!-- Key frames -->
    <param name="kf_dist_linear" value="0.02"/>
    <param name="kf_dist_angular" value="0.1"/>

    <!-- Output -->
    <param name="publish_tf" value="false"/>
    <param name="publish_pose" value="false"/>
    <param name="publish_pose_stamped" value="false"/>changeed

    <!-- Scan matching -->
    <param name="max_iterations" value="20.0"/>
    <param name="max_correspondence_dist" value="0.2"/>
    <param name="max_angular_correction_deg" value="50.0"/>
    <param name="max_linear_correction" value="1.0"/>
    <param name="epsilon_xy" value="0.000001"/>
    <param name="epsilon_theta" value="0.000001"/>
    <param name="outliers_maxPerc" value="0.9"/>

</node>

  <!--node pkg="tf" type="static_transform_publisher" name="odom_to_nav_broadcaster" args="0 0 0 0 0 0 odom nav 100"/>

 <node pkg="hector_pose_estimation" type="pose_estimation" name="hector_pose_estimation" >

    <remap from="/poseupdate" to="amcl_pose"/>
    <remap from="/hector/pose" to="/fix/pose"/>
    <remap from="/hector/pose2" to="/pose"/>
    <remap from="/magnetic" to="/xsens/magnetic"/>
    <remap from="/hector/odom" to="/state"/>
    <remap from="/raw_imu" to="imu/data"/>
    <remap from="/twistupdate" to="RosAria/cmd_vel"/>
    <remap from="/rollpitch" to="imu/data"/>

</node-->


  <!-- Robot pose ekf -->
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf" output="screen"> output="screen"
    <param name="output_frame" value="base_link"/>
    <param name="base_footprint_frame" value="base_footprint"/>
    <param name="freq"           value="10.0"/>
    <param name="sensor_timeout" value="2.0"/>
    <param name="odom_used"      value="true"/>
    <param name="imu_used"       value="true"/>
    <param name="vo_used"        value="true"/>
    <param name="gps_used"       value="false"/>
    <remap from="odom"           to="/odometry/filtered" />rf2o_laser_odometry/odom
    <remap from="imu_data"       to="/imu/data" />
    <remap from="vo"             to="/odometry/filtered" />/odometry/filtered
    <remap from="gps"            to="/xsens/gps" />
  </node>

  <!-- rqt_plot monitoring -->
  <!--node name="RosAria_pos_monitor"
        pkg="rqt_plot"
        type="rqt_plot"
        args="/amcl_pose/pose/pose/position/x" />
  <node name="RosAria_vel_monitor"
        pkg="rqt_plot"
        type="rqt_plot"
        args="/amcl_pose/twist/twist/linear/x" />
  <node name="RosAria_ang_monitor"
        pkg="rqt_plot"
        type="rqt_plot"
        args="/amcl_pose/twist/twist/angular/z" /-->

  <!-- 
      Pioneer robot driver
      Subscribe on topic /RosAria/cmd_vel 
  -->
    <!--node pkg="gscam" type="gscam" name="gscam">
        <param name="camera_name" value="default"/>
        <param name="camera_info_url" value="package://gscam/examples/camera_calibration/ost.yaml" />
        <remap from="camera/image_raw" to="camera/color/image_raw"/>
    </node-->


</launch>


