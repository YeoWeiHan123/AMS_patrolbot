controller_patience: 5.0
recovery_behaviour_enabled: true
#base_local_planner: dwa_local_planner/DWAPlannerROS
recovery_behaviors:
  - name: 'conservative_reset'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
  - name: 'aggressive_reset'
    type: 'clear_costmap_recovery/ClearCostmapRecovery'
conservative_reset:
  reset_distance: 0.15
  layer_names: ['obstacle_layer']

# Configuration for recovery behaviors
aggressive_reset:
  # When doing an aggressive reset, remove all voxels from the
  # costmap.
  reset_distance: 0.01
  layer_names: ['obstacle_layer']

# See also costmap_common_params.yaml for additional parameters set
# for the two costmaps.


obstacles: 
  z_voxels: 100
  publish_voxel_map: true
  max_obstacle_height: 2.0
  min_obstacle_height: 0.05
  origin_z: 0.0
  z_resolution: 0.03

plugins: 
  - {name: obstacles, type: "costmap_2d::VoxelLayer"}



FTCPlanner:
  max_x_vel: 0.30
  min_x_vel: 0.05
  max_rotation_vel: 0.8
  min_rotation_vel: 0.4
  acceleration_x: 0.15
  acceleration_z: 0.0
  position_accuracy: 0.08
  rotation_accuracy: 0.06
  slow_down_factor: 2.5
  sim_time: 0.6
  local_planner_frequence: 10
  join_obstacle: false

NavfnROS:
  allow_unknown: false
  default_tolerance: 0.5
  visualize_potential: true

TrajectoryPlannerROS:
  max_vel_x: 0.30
  min_vel_x: 0.05
  max_vel_theta: 0.10
  min_in_place_vel_theta: 0.7
  min_in_place_rotational_vel: 0.4 #0.15 original 0.8
  max_rot_vel: 0.8
  min_rot_vel: 0.4

  sim_time: 5.0 #3.0
#  path_distance_bias: 0.2 #--0.5 #--0.3
#  goal_distance_bias: 0.2 #--0.3
 
  acc_lim_theta: 0.5
  acc_lim_x: 0.15
  acc_lim_y: 0.15
  visualize_potential: true
  cost_factor: 0.55
  neutral_cost: 66

  holonomic_robot: true

  meter_scoring: true
  yaw_goal_tolerance: 1.0 #2.0
  xy_goal_tolerance: 0.2
  publish_cost_grid: true
  sim_granularity: 0.05
  frequency: 10 #1
  dwa: true
  vx_samples: 3 #3 
  publish_cost_grid_pc: true

###################################################################################################################

#DWAPlannerROS:

#  max_vel_x: 0.350
#  min_vel_x: 0.30
#  max_vel_y: 0
#  min_vel_y: 0

#  max_vel_theta: 0.350
#  min_in_place_vel_theta: 0.30
#  max_rot_vel: 0.3
#  min_rot_vel: 0.25
 
#  acc_lim_th: 0.5
#  acc_lim_x: 0.30
#  acc_lim_y: 0.30

#  max_trans_vel: 0.350
#  min_trans_vel: 0.30
  
  # These are guessed tolerance values. Yaw tolerance should be about
  # 45 degree and xy tolerance within a foot.
#  yaw_goal_tolerance: 0.20  # radians
#  xy_goal_tolerance: 0.1  # meters
  # We increase the stop_time_buffer
  # because we have a pretty high latency on the controller. A small 
  # stop_time_buffer would cause the robot to crash into obstacles
  # more often.
#  stop_time_buffer: 3.0
  # Increase the path_distance_bias to make the robot follow the global plan
  # more closely.
#  latch_xy_goal_tolerance: true
#  path_distance_bias: 10.0
#  vx_samples: 50
#  vy_samples: 20
#  occdist_scale: 0.2
#  sim_time: 5.0 #3.0
#  sim_granularity: 0.05
#  publish_cost_grid: true
